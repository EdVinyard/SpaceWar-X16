INIT:
    SCREEN $80
    CLS
    PRINT "HELLO, SPACEWAR!"
    RECT 0,0, 319,239, 0

    REM SHIP VERTICES
    DATA 7, -3,3, -1,-4, 0,-4, 3,3, 0,2, -1,2, -3,3

    T0 = -2 * 3.14159 / 16  : REM ROTATION INCREMENT IN RADIANS
    X0 = 100
    Y0 = 120
    FOR I = 0 TO 15
        REM RENDER THE FIRST EDGE
        READ N, X1,Y1
        X=X1: Y=Y1: T=I*T0: GOSUB ROTATE: X1=X: Y1=Y

        REM RENDER THE REST OF THE EDGES
        FOR J = 2 TO N
            READ X2,Y2
            X=X2: Y=Y2: T=I*T0: GOSUB ROTATE: X2=X: Y2=Y
            LINE X0+X1,Y0+Y1, X0+X2,Y0+Y2, 1
            X1=X2: Y1=Y2
            NEXT J

        REM COPY DRAWING INTO SPRITE VRAM
        SA = $3000 + (256*I): REM SPRITE ADDRESS
        SX=X0-4: SY=Y0-4: SC=8: SR=8: DA=SA: GOSUB SPRITECOPY
        RECT X0-5,Y0-5, X0+4,Y0+4, 0

        RESTORE
        NEXT I

    REM    IDX BNK ADR    DEPTH (8-BIT)
    SPRMEM 1,  1,  $3000, 1
    REM    IDX PRI PAL FLP XSZ YSZ DEPTH (8-BIT)
    SPRITE 1,  3,  0,  0,  0,  0,  1
    REM    IDX X     Y
    MOVSPR 1,  X0-4, Y0-4

    PRINT "PRESS ANY KEY TO QUIT"
    I = 0
    ANYKEYTOQUIT:
        SPRMEM 1,  1,  $100 * I + $3000, 1
        SLEEP 3
        I = I + 1: IF I > 15 THEN I = 0
        GET K$: IF K$="" THEN ANYKEYTOQUIT
    
    END

ROTATE:
    REM ROTATE AN X,Y COORDINATE AROUND THE ORIGIN (0,0)
    REM INOUT X X-COORDINATE
    REM INOUT Y Y-COORDINATE 
    REM INPUT T COUNTERCLOCKWISE ROTATION IN RADIANS

    ZX = X
    ZY = Y
    X = ZX * COS(T) - ZY * SIN(T)
    Y = ZX * SIN(T) + ZY * COS(T)
    RETURN

SPRITECOPY:
    REM COPY 8-BIT VALUES FROM VRAM INTO SPRITE VRAM
    REM WARNING: ONLY WORKS UP TO $FFFF!
    REM INPUT SX START X-COORDINATE (0-319)
    REM INPUT SY START Y-COORDINATE (0-239)
    REM INPUT SR SOURCE ROWS (8,16,32,64)
    REM INPUT SC SOURCE COLUMNS (8,16,32,64)
    REM INPUT DA DESTINATION ADDRESS (>=$3000)

    ZI = 0
    FOR ZY = SY TO SY+SR-1     : REM ROWS
        FOR ZX = SX TO SX+SC-1 : REM COLUMNS
            P = VPEEK(0, 320*ZY + ZX)
            REM PRINT P;
            VPOKE 1, DA + ZI, P
            ZI = ZI + 1
            NEXT
        REM PRINT
        NEXT

    RETURN    